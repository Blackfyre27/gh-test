name: GitHub Issues Test
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    env:
         GH_TOKEN: ${{ github.token }}
    steps:
      - name: Install dependencies
        run: |
               # GitHub CLI api
               # https://cli.github.com/manual/gh_api
                 gh api \
                 -H "Accept: application/vnd.github+json" \
                 /repos/Blackfyre27/gh-test/issues  --template \
                 '{{range .}}{{.id}}: [{{"\n"}}{Number: {{.number}},{{"\n"}}Title: ''"{{.title}}"'', {{"\n"}}Labels: ''{{.labels | pluck "name"}}'',{{"\n"}}Assignee:''"{{.assignee.login}}"'',{{"\n"}}State:''"{{.state}}"'',{{"\n"}}URL:''"{{.html_url}}"''}],{{"\n"}}{{end}}''}'
                 
      - name: Output current branch name & date
        # To use latest action, specify "release-master" instead of "v0.0.2"
        uses: satackey/action-js-inline@v0.0.2
        id: getdata
        with:
          # Edit the following line to install packages required to run your script.
          required-packages: axios
          script: |
            const core = require('@actions/core')
            const axios = require('axios')

            // branch
            const ref = process.env.GITHUB_REF // refs/heads/master
            const branch = ref.split('/').slice(-1)[0] // refs/heads/master â†’ master
            console.log(`branch: ${branch}`)
            core.setOutput('branch', branch)

            // date
            const dateResponse = await axios('https://ntp-a1.nict.go.jp/cgi-bin/json')
            /* {
                "id": "ntp-a1.nict.go.jp",
                "it": 0.000,
                "st": 1585285722.922,
                "leap": 36,
                "next": 1483228800,
                "step": 1
            } */
            const date = new Date(dateResponse.data.st)
            console.log(`date: ${date}`)
            core.setOutput('date', date)

      # You can use datas as ${{ steps.getdata.outputs.branch }} and ${{ steps.getdata.outputs.date }}


